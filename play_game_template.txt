        running_game = True

        while running_game:
            self.hero.projectile_current_time = 100
            game_time_delta = clock.tick() / 1000

            if self.hero.health <= 0:
                restart = show_death_screen()
                if restart:
                    return 1, "restart"
                return 1, "death"

            if self.dialog_number < len(self.dialogs_text) and self.hero.state and \
                    self.hero.absolute_x <= self.queue_dialogs[self.dialog_number] <= \
                    self.hero.absolute_x + self.hero.rect.w:
                self.cur_dialog = self.dialogs_text[self.dialog_number]
                self.dialog_number += 1

            if self.hero.absolute_x <= self.exit_pos <= self.hero.absolute_x + self.hero.rect.w and \
                    len(self.queue_dialogs) == self.dialog_number:
                return 2, "passed"

            for event_game in pygame.event.get():
                if event_game.type == pygame.QUIT or (event_game.type == pygame.KEYDOWN and
                                                      event_game.key ==
                                                      settings['pause']):
                    try:
                        active_pause_menu()
                    except ExitToMenuException:
                        running_game = False

                UIManager.process_events(event_game)
                all_sprites.update()

            UIManager.update(game_time_delta)
            all_sprites.update()
            self.hero.collide_books()

            # Движение BackGround`а (бесконечный фон)
            move_background(self.bg_first, self.bg_second)

            self.camera.update(self.hero)
            # обновляем положение всех спрайтов
            for sprite in all_sprites:
                self.camera.apply(sprite)
            for sprite in invisible_bound:
                self.camera.apply(sprite)

            screen.fill((0, 0, 0))

            hero_group.draw(screen)
            if self.dialog_number == 2:
                draw_text_data([f"Найти Лену"])
            UIManager.draw_ui(screen)
            pygame.display.flip()

            if self.cur_dialog:
                try:
                    show_dialog(self.cur_dialog, start_from=self.cur_dialog_in_progress)
                except ExitToMenuException:
                    running_game = False
                self.cur_dialog = []
                self.cur_dialog_in_progress = -1

        return 1, "not passed"